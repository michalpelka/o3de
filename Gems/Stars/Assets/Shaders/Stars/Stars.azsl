/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */

#include <Atom/Features/ColorManagement/TransformColor.azsli>
#include <Atom/Features/SrgSemantics.azsli>
#include <scenesrg.srgi>
#include <viewsrg.srgi>

ShaderResourceGroup PerDrawSrg : SRG_PerDraw
{
    float3x3 m_rotation;
    struct StarShaderConstants
    {
        float2 m_scale;
        float m_exposureFactor;
        float m_twinkleRate;
    };
    StarShaderConstants m_starParams;
}

struct VSInput
{
    float3 m_position : POSITION;
    float4 m_color : COLOR0;
    uint m_vertexID : SV_VertexID;
};

struct VSOutput
{
    float4 m_position : SV_Position;
    float4 m_color : COLOR0;
    float2 m_quadPos : TEXCOORD;
};

VSOutput MainVS(VSInput IN)
{
    VSOutput OUT;
    
    const float4 colorAndMagnitude = IN.m_color;

    // Set the w component to 0 in order to project the stars out to infinity.
    const float4 pos = float4(IN.m_position, 1.0);
    OUT.m_position = mul(ViewSrg::m_viewProjectionMatrix, pos);    

    return OUT;
};

struct PSOutput
{
    float4 m_diffuse : SV_Target0;
};

PSOutput MainPS(VSOutput IN)
{
    PSOutput OUT;

    OUT.m_diffuse = float4(1.0,0.0,0.0,0.1);
    return OUT;
}; 
